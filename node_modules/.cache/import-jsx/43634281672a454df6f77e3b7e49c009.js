"use strict";

const React = require("react");
const {
  Text,
  Box
} = require("ink");
const {
  useState
} = require("react");
const TextInput = require("ink-text-input").default;
const wcc = require("world-countries-capitals");
const App = () => {
  const [country, setCountry] = useState("");
  const [capital, setCapital] = useState("");
  const [currency, setCurrency] = useState("");
  const [phone, setPhone] = useState("");
  const [language, setLanguage] = useState("");
  React.useEffect(() => {
    const getCountry = wcc.getCountryDetailsByName(country);
    setCapital(getCountry[0].capital);
    setCurrency(getCountry[0].currency);
    setPhone(getCountry[0].phone_code);
    setLanguage(getCountry[0].ntive_language);
  });
  return /*#__PURE__*/React.createElement(Box, {
    flexDirection: "column",
    alignSelf: "left"
  }, /*#__PURE__*/React.createElement(Box, {
    borderColor: "green",
    borderStyle: "round"
  }, /*#__PURE__*/React.createElement(Text, null, "Welcome to the country CLI")), /*#__PURE__*/React.createElement(TextInput, {
    placeholder: "Enter country name...",
    value: country,
    onChange: setCountry
  }), /*#__PURE__*/React.createElement(Box, {
    flexDirection: "column",
    borderColor: "white",
    width: 80,
    borderStyle: "single"
  }, /*#__PURE__*/React.createElement(Box, null, /*#__PURE__*/React.createElement(Box, {
    width: "40%"
  }, /*#__PURE__*/React.createElement(Text, null, "Code")), /*#__PURE__*/React.createElement(Box, {
    width: "40%"
  }, /*#__PURE__*/React.createElement(Text, null, "Capital")), /*#__PURE__*/React.createElement(Box, {
    width: "40%"
  }, /*#__PURE__*/React.createElement(Text, null, "Currency")), /*#__PURE__*/React.createElement(Box, {
    width: "40%"
  }, /*#__PURE__*/React.createElement(Text, null, "Language"))), /*#__PURE__*/React.createElement(Box, null, /*#__PURE__*/React.createElement(Box, {
    width: "40%"
  }, /*#__PURE__*/React.createElement(Text, null, phone)), /*#__PURE__*/React.createElement(Box, {
    width: "40%"
  }, /*#__PURE__*/React.createElement(Text, null, capital)), /*#__PURE__*/React.createElement(Box, {
    width: "40%"
  }, /*#__PURE__*/React.createElement(Text, null, currency)), /*#__PURE__*/React.createElement(Box, {
    width: "40%"
  }, /*#__PURE__*/React.createElement(Text, null, language)))));
};
module.exports = App;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJUZXh0IiwiQm94IiwidXNlU3RhdGUiLCJUZXh0SW5wdXQiLCJkZWZhdWx0Iiwid2NjIiwiQXBwIiwiY291bnRyeSIsInNldENvdW50cnkiLCJjYXBpdGFsIiwic2V0Q2FwaXRhbCIsImN1cnJlbmN5Iiwic2V0Q3VycmVuY3kiLCJwaG9uZSIsInNldFBob25lIiwibGFuZ3VhZ2UiLCJzZXRMYW5ndWFnZSIsInVzZUVmZmVjdCIsImdldENvdW50cnkiLCJnZXRDb3VudHJ5RGV0YWlsc0J5TmFtZSIsInBob25lX2NvZGUiLCJudGl2ZV9sYW5ndWFnZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlcyI6WyJ1aS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbmNvbnN0IFJlYWN0ID0gcmVxdWlyZShcInJlYWN0XCIpO1xuY29uc3QgeyBUZXh0LCBCb3ggfSA9IHJlcXVpcmUoXCJpbmtcIik7XG5jb25zdCB7IHVzZVN0YXRlIH0gPSByZXF1aXJlKFwicmVhY3RcIik7XG5jb25zdCBUZXh0SW5wdXQgPSByZXF1aXJlKFwiaW5rLXRleHQtaW5wdXRcIikuZGVmYXVsdDtcbmNvbnN0IHdjYyA9IHJlcXVpcmUoXCJ3b3JsZC1jb3VudHJpZXMtY2FwaXRhbHNcIik7XG5cbmNvbnN0IEFwcCA9ICgpID0+IHtcblx0Y29uc3QgW2NvdW50cnksIHNldENvdW50cnldID0gdXNlU3RhdGUoXCJcIik7XG5cdGNvbnN0IFtjYXBpdGFsLCBzZXRDYXBpdGFsXSA9IHVzZVN0YXRlKFwiXCIpO1xuXHRjb25zdCBbY3VycmVuY3ksIHNldEN1cnJlbmN5XSA9IHVzZVN0YXRlKFwiXCIpO1xuXHRjb25zdCBbcGhvbmUsIHNldFBob25lXSA9IHVzZVN0YXRlKFwiXCIpO1xuXHRjb25zdCBbbGFuZ3VhZ2UsIHNldExhbmd1YWdlXSA9IHVzZVN0YXRlKFwiXCIpO1xuXG5cdFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG5cdFx0Y29uc3QgZ2V0Q291bnRyeSA9IHdjYy5nZXRDb3VudHJ5RGV0YWlsc0J5TmFtZShjb3VudHJ5KTtcblx0XHRzZXRDYXBpdGFsKGdldENvdW50cnlbMF0uY2FwaXRhbCk7XG5cdFx0c2V0Q3VycmVuY3koZ2V0Q291bnRyeVswXS5jdXJyZW5jeSk7XG5cdFx0c2V0UGhvbmUoZ2V0Q291bnRyeVswXS5waG9uZV9jb2RlKTtcblx0XHRzZXRMYW5ndWFnZShnZXRDb3VudHJ5WzBdLm50aXZlX2xhbmd1YWdlKTtcblx0fSk7XG5cblx0cmV0dXJuIChcblx0XHQ8Qm94IGZsZXhEaXJlY3Rpb249XCJjb2x1bW5cIiBhbGlnblNlbGY9XCJsZWZ0XCI+XG5cdFx0XHQ8Qm94IGJvcmRlckNvbG9yPVwiZ3JlZW5cIiBib3JkZXJTdHlsZT1cInJvdW5kXCI+XG5cdFx0XHRcdDxUZXh0PldlbGNvbWUgdG8gdGhlIGNvdW50cnkgQ0xJPC9UZXh0PlxuXHRcdFx0PC9Cb3g+XG5cdFx0XHQ8VGV4dElucHV0XG5cdFx0XHRcdHBsYWNlaG9sZGVyPVwiRW50ZXIgY291bnRyeSBuYW1lLi4uXCJcblx0XHRcdFx0dmFsdWU9e2NvdW50cnl9XG5cdFx0XHRcdG9uQ2hhbmdlPXtzZXRDb3VudHJ5fVxuXHRcdFx0Lz5cblx0XHRcdDxCb3ggZmxleERpcmVjdGlvbj1cImNvbHVtblwiIGJvcmRlckNvbG9yPVwid2hpdGVcIiB3aWR0aD17ODB9IGJvcmRlclN0eWxlPVwic2luZ2xlXCI+XG5cdFx0XHRcdDxCb3g+XG5cdFx0XHRcdFx0PEJveCB3aWR0aD1cIjQwJVwiPlxuXHRcdFx0XHRcdFx0PFRleHQ+Q29kZTwvVGV4dD5cblx0XHRcdFx0XHQ8L0JveD5cblx0XHRcdFx0XHQ8Qm94IHdpZHRoPVwiNDAlXCI+XG5cdFx0XHRcdFx0XHQ8VGV4dD5DYXBpdGFsPC9UZXh0PlxuXHRcdFx0XHRcdDwvQm94PlxuXHRcdFx0XHRcdDxCb3ggd2lkdGg9XCI0MCVcIj5cblx0XHRcdFx0XHRcdDxUZXh0PkN1cnJlbmN5PC9UZXh0PlxuXHRcdFx0XHRcdDwvQm94PlxuXHRcdFx0XHRcdDxCb3ggd2lkdGg9XCI0MCVcIj5cblx0XHRcdFx0XHRcdDxUZXh0Pkxhbmd1YWdlPC9UZXh0PlxuXHRcdFx0XHRcdDwvQm94PlxuXHRcdFx0XHQ8L0JveD5cblxuXHRcdFx0XHQ8Qm94PlxuXHRcdFx0XHRcdDxCb3ggd2lkdGg9XCI0MCVcIj5cblx0XHRcdFx0XHRcdDxUZXh0PntwaG9uZX08L1RleHQ+XG5cdFx0XHRcdFx0PC9Cb3g+XG5cdFx0XHRcdFx0PEJveCB3aWR0aD1cIjQwJVwiPlxuXHRcdFx0XHRcdFx0PFRleHQ+e2NhcGl0YWx9PC9UZXh0PlxuXHRcdFx0XHRcdDwvQm94PlxuXHRcdFx0XHRcdDxCb3ggd2lkdGg9XCI0MCVcIj5cblx0XHRcdFx0XHRcdDxUZXh0PntjdXJyZW5jeX08L1RleHQ+XG5cdFx0XHRcdFx0PC9Cb3g+XG5cdFx0XHRcdFx0PEJveCB3aWR0aD1cIjQwJVwiPlxuXHRcdFx0XHRcdFx0PFRleHQ+e2xhbmd1YWdlfTwvVGV4dD5cblx0XHRcdFx0XHQ8L0JveD5cblx0XHRcdFx0PC9Cb3g+XG5cdFx0XHQ8L0JveD5cblx0XHQ8L0JveD5cblx0KTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gQXBwO1xuIl0sIm1hcHBpbmdzIjoiQUFBQSxZQUFZOztBQUNaLE1BQU1BLEtBQUssR0FBR0MsT0FBTyxDQUFDLE9BQU8sQ0FBQztBQUM5QixNQUFNO0VBQUVDLElBQUk7RUFBRUM7QUFBSSxDQUFDLEdBQUdGLE9BQU8sQ0FBQyxLQUFLLENBQUM7QUFDcEMsTUFBTTtFQUFFRztBQUFTLENBQUMsR0FBR0gsT0FBTyxDQUFDLE9BQU8sQ0FBQztBQUNyQyxNQUFNSSxTQUFTLEdBQUdKLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDSyxPQUFPO0FBQ25ELE1BQU1DLEdBQUcsR0FBR04sT0FBTyxDQUFDLDBCQUEwQixDQUFDO0FBRS9DLE1BQU1PLEdBQUcsR0FBRyxNQUFNO0VBQ2pCLE1BQU0sQ0FBQ0MsT0FBTyxFQUFFQyxVQUFVLENBQUMsR0FBR04s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