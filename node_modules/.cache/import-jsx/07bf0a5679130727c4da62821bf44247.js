"use strict";

const React = require("react");
const {
  Text,
  Box
} = require("ink");
const {
  useState
} = require("react");
const TextInput = require("ink-text-input").default;
const wcc = require("world-countries-capitals");
const App = () => {
  const [country, setCountry] = useState("");
  const [capital, setCapital] = useState("");
  const [currency, setCurrency] = useState("");
  const [phone, setPhone] = useState("");
  const [language, setLanguage] = useState("");
  React.useEffect(() => {
    const getCountry = wcc.getCountryDetailsByName(country);
    setCapital(getCountry[0].capital);
    setCurrency(getCountry[0].currency);
    setPhone(getCountry[0].phone_code);
    setLanguage(getCountry[0].language);
  });
  return /*#__PURE__*/React.createElement(Box, {
    flexDirection: "column",
    alignSelf: "left"
  }, /*#__PURE__*/React.createElement(Box, {
    borderColor: "green",
    borderStyle: "round"
  }, /*#__PURE__*/React.createElement(Text, null, "Welcome to the country CLI")), /*#__PURE__*/React.createElement(TextInput, {
    placeholder: "Enter country name...",
    value: country,
    onChange: setCountry
  }), /*#__PURE__*/React.createElement(Box, {
    flexDirection: "column",
    borderColor: "white",
    width: 80,
    borderStyle: "single"
  }, /*#__PURE__*/React.createElement(Box, null, /*#__PURE__*/React.createElement(Box, {
    width: "40%"
  }, /*#__PURE__*/React.createElement(Text, null, "Code")), /*#__PURE__*/React.createElement(Box, {
    width: "40%"
  }, /*#__PURE__*/React.createElement(Text, null, "Capital")), /*#__PURE__*/React.createElement(Box, {
    width: "40%"
  }, /*#__PURE__*/React.createElement(Text, null, "Currency")), /*#__PURE__*/React.createElement(Box, {
    width: "40%"
  }, /*#__PURE__*/React.createElement(Text, null, "Language"))), /*#__PURE__*/React.createElement(Box, null, /*#__PURE__*/React.createElement(Box, {
    width: "40%"
  }, /*#__PURE__*/React.createElement(Text, null, phone)), /*#__PURE__*/React.createElement(Box, {
    width: "40%"
  }, /*#__PURE__*/React.createElement(Text, null, capital)), /*#__PURE__*/React.createElement(Box, {
    width: "40%"
  }, /*#__PURE__*/React.createElement(Text, null, currency)), /*#__PURE__*/React.createElement(Box, {
    width: "40%"
  }, /*#__PURE__*/React.createElement(Text, null, language)))));
};
module.exports = App;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJUZXh0IiwiQm94IiwidXNlU3RhdGUiLCJUZXh0SW5wdXQiLCJkZWZhdWx0Iiwid2NjIiwiQXBwIiwiY291bnRyeSIsInNldENvdW50cnkiLCJjYXBpdGFsIiwic2V0Q2FwaXRhbCIsImN1cnJlbmN5Iiwic2V0Q3VycmVuY3kiLCJwaG9uZSIsInNldFBob25lIiwibGFuZ3VhZ2UiLCJzZXRMYW5ndWFnZSIsInVzZUVmZmVjdCIsImdldENvdW50cnkiLCJnZXRDb3VudHJ5RGV0YWlsc0J5TmFtZSIsInBob25lX2NvZGUiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsidWkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5jb25zdCBSZWFjdCA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcbmNvbnN0IHsgVGV4dCwgQm94IH0gPSByZXF1aXJlKFwiaW5rXCIpO1xuY29uc3QgeyB1c2VTdGF0ZSB9ID0gcmVxdWlyZShcInJlYWN0XCIpO1xuY29uc3QgVGV4dElucHV0ID0gcmVxdWlyZShcImluay10ZXh0LWlucHV0XCIpLmRlZmF1bHQ7XG5jb25zdCB3Y2MgPSByZXF1aXJlKFwid29ybGQtY291bnRyaWVzLWNhcGl0YWxzXCIpO1xuXG5jb25zdCBBcHAgPSAoKSA9PiB7XG5cdGNvbnN0IFtjb3VudHJ5LCBzZXRDb3VudHJ5XSA9IHVzZVN0YXRlKFwiXCIpO1xuXHRjb25zdCBbY2FwaXRhbCwgc2V0Q2FwaXRhbF0gPSB1c2VTdGF0ZShcIlwiKTtcblx0Y29uc3QgW2N1cnJlbmN5LCBzZXRDdXJyZW5jeV0gPSB1c2VTdGF0ZShcIlwiKTtcblx0Y29uc3QgW3Bob25lLCBzZXRQaG9uZV0gPSB1c2VTdGF0ZShcIlwiKTtcblx0Y29uc3QgW2xhbmd1YWdlLCBzZXRMYW5ndWFnZV0gPSB1c2VTdGF0ZShcIlwiKTtcblxuXHRSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuXHRcdGNvbnN0IGdldENvdW50cnkgPSB3Y2MuZ2V0Q291bnRyeURldGFpbHNCeU5hbWUoY291bnRyeSk7XG5cdFx0c2V0Q2FwaXRhbChnZXRDb3VudHJ5WzBdLmNhcGl0YWwpO1xuXHRcdHNldEN1cnJlbmN5KGdldENvdW50cnlbMF0uY3VycmVuY3kpO1xuXHRcdHNldFBob25lKGdldENvdW50cnlbMF0ucGhvbmVfY29kZSk7XG5cdFx0c2V0TGFuZ3VhZ2UoZ2V0Q291bnRyeVswXS5sYW5ndWFnZSk7XG5cdH0pO1xuXG5cdHJldHVybiAoXG5cdFx0PEJveCBmbGV4RGlyZWN0aW9uPVwiY29sdW1uXCIgYWxpZ25TZWxmPVwibGVmdFwiPlxuXHRcdFx0PEJveCBib3JkZXJDb2xvcj1cImdyZWVuXCIgYm9yZGVyU3R5bGU9XCJyb3VuZFwiPlxuXHRcdFx0XHQ8VGV4dD5XZWxjb21lIHRvIHRoZSBjb3VudHJ5IENMSTwvVGV4dD5cblx0XHRcdDwvQm94PlxuXHRcdFx0PFRleHRJbnB1dFxuXHRcdFx0XHRwbGFjZWhvbGRlcj1cIkVudGVyIGNvdW50cnkgbmFtZS4uLlwiXG5cdFx0XHRcdHZhbHVlPXtjb3VudHJ5fVxuXHRcdFx0XHRvbkNoYW5nZT17c2V0Q291bnRyeX1cblx0XHRcdC8+XG5cdFx0XHQ8Qm94IGZsZXhEaXJlY3Rpb249XCJjb2x1bW5cIiBib3JkZXJDb2xvcj1cIndoaXRlXCIgd2lkdGg9ezgwfSBib3JkZXJTdHlsZT1cInNpbmdsZVwiPlxuXHRcdFx0XHQ8Qm94PlxuXHRcdFx0XHRcdDxCb3ggd2lkdGg9XCI0MCVcIj5cblx0XHRcdFx0XHRcdDxUZXh0PkNvZGU8L1RleHQ+XG5cdFx0XHRcdFx0PC9Cb3g+XG5cdFx0XHRcdFx0PEJveCB3aWR0aD1cIjQwJVwiPlxuXHRcdFx0XHRcdFx0PFRleHQ+Q2FwaXRhbDwvVGV4dD5cblx0XHRcdFx0XHQ8L0JveD5cblx0XHRcdFx0XHQ8Qm94IHdpZHRoPVwiNDAlXCI+XG5cdFx0XHRcdFx0XHQ8VGV4dD5DdXJyZW5jeTwvVGV4dD5cblx0XHRcdFx0XHQ8L0JveD5cblx0XHRcdFx0XHQ8Qm94IHdpZHRoPVwiNDAlXCI+XG5cdFx0XHRcdFx0XHQ8VGV4dD5MYW5ndWFnZTwvVGV4dD5cblx0XHRcdFx0XHQ8L0JveD5cblx0XHRcdFx0PC9Cb3g+XG5cblx0XHRcdFx0PEJveD5cblx0XHRcdFx0XHQ8Qm94IHdpZHRoPVwiNDAlXCI+XG5cdFx0XHRcdFx0XHQ8VGV4dD57cGhvbmV9PC9UZXh0PlxuXHRcdFx0XHRcdDwvQm94PlxuXHRcdFx0XHRcdDxCb3ggd2lkdGg9XCI0MCVcIj5cblx0XHRcdFx0XHRcdDxUZXh0PntjYXBpdGFsfTwvVGV4dD5cblx0XHRcdFx0XHQ8L0JveD5cblx0XHRcdFx0XHQ8Qm94IHdpZHRoPVwiNDAlXCI+XG5cdFx0XHRcdFx0XHQ8VGV4dD57Y3VycmVuY3l9PC9UZXh0PlxuXHRcdFx0XHRcdDwvQm94PlxuXHRcdFx0XHRcdDxCb3ggd2lkdGg9XCI0MCVcIj5cblx0XHRcdFx0XHRcdDxUZXh0PntsYW5ndWFnZX08L1RleHQ+XG5cdFx0XHRcdFx0PC9Cb3g+XG5cdFx0XHRcdDwvQm94PlxuXHRcdFx0PC9Cb3g+XG5cdFx0PC9Cb3g+XG5cdCk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEFwcDtcbiJdLCJtYXBwaW5ncyI6IkFBQUEsWUFBWTs7QUFDWixNQUFNQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxPQUFPLENBQUM7QUFDOUIsTUFBTTtFQUFFQyxJQUFJO0VBQUVDO0FBQUksQ0FBQyxHQUFHRixPQUFPLENBQUMsS0FBSyxDQUFDO0FBQ3BDLE1BQU07RUFBRUc7QUFBUyxDQUFDLEdBQUdILE9BQU8sQ0FBQyxPQUFPLENBQUM7QUFDckMsTUFBTUksU0FBUyxHQUFHSixPQUFPLENBQUMsZ0JBQWdCLENBQUMsQ0FBQ0ssT0FBTztBQUNuRCxNQUFNQyxHQUFHLEdBQUdOLE9BQU8sQ0FBQywwQkFBMEIsQ0FBQztBQUUvQyxNQUFNTyxHQUFHLEdBQUcsTUFBTTtFQUNqQixNQUFNLENBQUNDLE9BQU8sRUFBRUMsVUFBVSxDQUFDLEdBQUdOLFFBQVEsQ0FBQyxFQUFFLENBQUM7RUFD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